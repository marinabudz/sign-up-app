{"ast":null,"code":"import _defineProperty from \"/Users/marinabudz97/Desktop/jsp camp/sign-up-app/sign-up-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/marinabudz97/Desktop/jsp camp/sign-up-app/sign-up-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/marinabudz97/Desktop/jsp camp/sign-up-app/sign-up-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/marinabudz97/Desktop/jsp camp/sign-up-app/sign-up-app/src/App.js\";\n\nimport React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Sucess from \"./components/sucess/sucess\";\nimport { ErrorHandler } from \"./components/error/error\"; // import {\n//   InitialsValidation,\n//   EmailValidation,\n//   PasswordValidation,\n//   PasswordConfirmation\n// } from \"./components/validation/validation\";\n\nimport Input from \"./components/input/input\";\nvar validInputs = {\n  validInitials: RegExp(/^[a-zA-Z]{3,100}/),\n  validEmail: RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i),\n  validPassword: RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/)\n};\n\nvar App = function App() {\n  var _useState = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    signedUp: false,\n    disabled: true\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState({\n    isvalid_user: \"\",\n    isvalid_email: \"\",\n    isvalid_password: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var initialsValidation = function initialsValidation(_ref) {\n    var value = _ref.value,\n        name = _ref.name;\n    var validInitials = validInputs.validInitials;\n\n    if (value) {\n      return validInitials.test(value) ? \"\" : /*#__PURE__*/React.createElement(ErrorHandler, {\n        name: name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 47\n        }\n      });\n    }\n\n    return value;\n  };\n\n  var handleInputChange = function handleInputChange(e) {\n    e.preventDefault();\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setUser(_objectSpread({}, user, _defineProperty({}, name, value)));\n\n    switch (name) {\n      case firstName:\n      case lastName:\n    }\n  };\n\n  var firstName = user.firstName,\n      lastName = user.lastName,\n      email = user.email,\n      password = user.password,\n      confirmPassword = user.confirmPassword,\n      signedUp = user.signedUp,\n      disabled = user.disabled;\n\n  if (!signedUp) {\n    // onSubmit={this.onSubmit}\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \" Sign Up\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"firstName\",\n      type: \"text\",\n      placeholder: \"First Name\",\n      value: firstName,\n      onChange: handleInputChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: disabled,\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Sucess, {\n    name: firstName,\n    lastName: lastName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default App; // export default class App extends Component {\n//   state = {\n//     firstName: \"\",\n//     lastName: \"\",\n//     email: \"\",\n//     password: \"\",\n//     confirmPassword: \"\",\n//     signedUp: false,\n//     disabled: true\n//   };\n//   handleInputChange = e => {\n//     const { name, value } = e.target;\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n//   handleError = () => {\n//     const {\n//       firstName,\n//       lastName,\n//       email,\n//       password,\n//       confirmPassword\n//     } = this.state;\n//     if (firstName && lastName && password && email && confirmPassword) {\n//       this.setState({\n//         disabled: false\n//       });\n//     }\n//   };\n//   onSubmit = e => {\n//     e.preventDefault();\n//     this.setState({ signedUp: true });\n//   };\n//   render() {\n//     const {\n//       firstName,\n//       lastName,\n//       email,\n//       password,\n//       confirmPassword,\n//       signedUp,\n//       disabled\n//     } = this.state;\n//     if (!signedUp) {\n//       return (\n//         <form className=\"form\" onSubmit={this.onSubmit}>\n//           <label> Sign Up</label>\n//           <input\n//             name=\"firstName\"\n//             type=\"text\"\n//             placeholder=\"First Name\"\n//             value={firstName}\n//             onChange={this.handleInputChange}\n//           />\n//           <InitialsValidation name=\"firstName\" value={firstName} />\n//           <input\n//             name=\"lastName\"\n//             type=\"text\"\n//             placeholder=\"Last Name\"\n//             value={lastName}\n//             onChange={this.handleInputChange}\n//           />\n//           <InitialsValidation name=\"lastName\" value={lastName} />\n//           <input\n//             name=\"email\"\n//             type=\"email\"\n//             placeholder=\"Email\"\n//             value={email}\n//             onChange={this.handleInputChange}\n//           />\n//           <EmailValidation name=\"email\" value={email} />\n//           <input\n//             name=\"password\"\n//             type=\"password\"\n//             placeholder=\"Password\"\n//             value={password}\n//             onChange={this.handleInputChange}\n//           />\n//           <PasswordValidation\n//             name=\"password\"\n//             value={password}\n//             disabled={disabled}\n//           />\n//           <input\n//             name=\"confirmPassword\"\n//             type=\"password\"\n//             placeholder=\"Verify Password\"\n//             value={confirmPassword}\n//             onChange={this.handleInputChange}\n//           />\n//           <PasswordConfirmation\n//             password={password}\n//             confirmation={confirmPassword}\n//             name=\"confirmation\"\n//           />\n//           <button disabled={disabled} type=\"submit\">\n//             Submit\n//           </button>\n//         </form>\n//       );\n//     }\n//     return <Sucess name={firstName} lastName={lastName} />;\n//   }\n// const handleError = () => {\n//   const { isvalid_user, isvalid_email, isvalid_password } = isvalid;\n//   if (!isvalid_user) {\n//     return (\n//       <p>\n//         <ErrorHandler name=\"firstName\" />\n//       </p>\n//     );\n//   }\n// };","map":{"version":3,"sources":["/Users/marinabudz97/Desktop/jsp camp/sign-up-app/sign-up-app/src/App.js"],"names":["React","useState","Sucess","ErrorHandler","Input","validInputs","validInitials","RegExp","validEmail","validPassword","App","firstName","lastName","email","password","confirmPassword","signedUp","disabled","user","setUser","isvalid_user","isvalid_email","isvalid_password","error","setError","initialsValidation","value","name","test","handleInputChange","e","preventDefault","target"],"mappings":"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":["import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Sucess from \"./components/sucess/sucess\";\nimport { ErrorHandler } from \"./components/error/error\";\n// import {\n//   InitialsValidation,\n//   EmailValidation,\n//   PasswordValidation,\n//   PasswordConfirmation\n// } from \"./components/validation/validation\";\nimport Input from \"./components/input/input\";\n\nconst validInputs = {\n  validInitials: RegExp(/^[a-zA-Z]{3,100}/),\n  validEmail: RegExp(\n    /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n  ),\n  validPassword: RegExp(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\n  )\n};\n\nconst App = () => {\n  const [user, setUser] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    signedUp: false,\n    disabled: true\n  });\n\n  const [error, setError] = useState({\n    isvalid_user: \"\",\n    isvalid_email: \"\",\n    isvalid_password: \"\"\n  });\n\n  const initialsValidation = ({ value, name }) => {\n    const { validInitials } = validInputs;\n    if (value) {\n      return validInitials.test(value) ? \"\" : <ErrorHandler name={name} />;\n    }\n    return value;\n  };\n\n  const handleInputChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n    switch (name) {\n      case firstName:\n      case lastName:\n    }\n  };\n\n  const {\n    firstName,\n    lastName,\n    email,\n    password,\n    confirmPassword,\n    signedUp,\n    disabled\n  } = user;\n\n  if (!signedUp) {\n    // onSubmit={this.onSubmit}\n    return (\n      <form className=\"form\">\n        <label> Sign Up</label>\n        <Input\n          name=\"firstName\"\n          type=\"text\"\n          placeholder=\"First Name\"\n          value={firstName}\n          onChange={handleInputChange}\n        />\n\n        {/* <input\n          name=\"firstName\"\n          type=\"text\"\n          placeholder=\"First Name\"\n          value={firstName}\n          onChange={handleInputChange}\n        />\n\n        <input\n          name=\"lastName\"\n          type=\"text\"\n          placeholder=\"Last Name\"\n          value={lastName}\n          onChange={handleInputChange}\n        />\n\n        <InitialsValidation name=\"lastName\" value={lastName} />\n\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={handleInputChange}\n        />\n        <EmailValidation name=\"email\" value={email} />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={handleInputChange}\n        />\n        <PasswordValidation\n          name=\"password\"\n          value={password}\n          disabled={disabled}\n        />\n        <input\n          name=\"confirmPassword\"\n          type=\"password\"\n          placeholder=\"Verify Password\"\n          value={confirmPassword}\n          onChange={handleInputChange}\n        />\n        <PasswordConfirmation\n          password={password}\n          confirmation={confirmPassword}\n          name=\"confirmation\"\n        /> */}\n        <button disabled={disabled} type=\"submit\">\n          Submit\n        </button>\n      </form>\n    );\n  }\n  return <Sucess name={firstName} lastName={lastName} />;\n};\nexport default App;\n\n// export default class App extends Component {\n//   state = {\n//     firstName: \"\",\n//     lastName: \"\",\n//     email: \"\",\n//     password: \"\",\n//     confirmPassword: \"\",\n//     signedUp: false,\n//     disabled: true\n//   };\n\n//   handleInputChange = e => {\n//     const { name, value } = e.target;\n//     this.setState({\n//       [name]: value\n//     });\n//   };\n\n//   handleError = () => {\n//     const {\n//       firstName,\n//       lastName,\n//       email,\n//       password,\n//       confirmPassword\n//     } = this.state;\n//     if (firstName && lastName && password && email && confirmPassword) {\n//       this.setState({\n//         disabled: false\n//       });\n//     }\n//   };\n\n//   onSubmit = e => {\n//     e.preventDefault();\n//     this.setState({ signedUp: true });\n//   };\n\n//   render() {\n//     const {\n//       firstName,\n//       lastName,\n//       email,\n//       password,\n//       confirmPassword,\n//       signedUp,\n//       disabled\n//     } = this.state;\n\n//     if (!signedUp) {\n//       return (\n//         <form className=\"form\" onSubmit={this.onSubmit}>\n//           <label> Sign Up</label>\n//           <input\n//             name=\"firstName\"\n//             type=\"text\"\n//             placeholder=\"First Name\"\n//             value={firstName}\n//             onChange={this.handleInputChange}\n//           />\n\n//           <InitialsValidation name=\"firstName\" value={firstName} />\n\n//           <input\n//             name=\"lastName\"\n//             type=\"text\"\n//             placeholder=\"Last Name\"\n//             value={lastName}\n//             onChange={this.handleInputChange}\n//           />\n\n//           <InitialsValidation name=\"lastName\" value={lastName} />\n\n//           <input\n//             name=\"email\"\n//             type=\"email\"\n//             placeholder=\"Email\"\n//             value={email}\n//             onChange={this.handleInputChange}\n//           />\n//           <EmailValidation name=\"email\" value={email} />\n\n//           <input\n//             name=\"password\"\n//             type=\"password\"\n//             placeholder=\"Password\"\n//             value={password}\n//             onChange={this.handleInputChange}\n//           />\n\n//           <PasswordValidation\n//             name=\"password\"\n//             value={password}\n//             disabled={disabled}\n//           />\n\n//           <input\n//             name=\"confirmPassword\"\n//             type=\"password\"\n//             placeholder=\"Verify Password\"\n//             value={confirmPassword}\n//             onChange={this.handleInputChange}\n//           />\n//           <PasswordConfirmation\n//             password={password}\n//             confirmation={confirmPassword}\n//             name=\"confirmation\"\n//           />\n//           <button disabled={disabled} type=\"submit\">\n//             Submit\n//           </button>\n//         </form>\n//       );\n//     }\n//     return <Sucess name={firstName} lastName={lastName} />;\n//   }\n// const handleError = () => {\n//   const { isvalid_user, isvalid_email, isvalid_password } = isvalid;\n//   if (!isvalid_user) {\n//     return (\n//       <p>\n//         <ErrorHandler name=\"firstName\" />\n//       </p>\n//     );\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}