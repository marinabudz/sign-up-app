{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/marinabudz97/Desktop/jsp camp/sign-up-app/sign-up-app/src/components/validation/validation.js\";\n\nimport React from \"react\";\nimport { ErrorHandler } from \"../error/error\";\nvar validInputs = {\n  validInitials: RegExp(/^[a-zA-Z]{3,100}/),\n  validEmail: RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i),\n  validPassword: RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/)\n};\n\nvar initialsValidation = function initialsValidation(value) {\n  var validInitials = validInputs.validInitials;\n\n  if (value) {\n    return validInitials.test(value);\n  }\n};\n\nvar emailValidation = function emailValidation(_ref) {\n  var value = _ref.value,\n      name = _ref.name;\n  var validEmail = validInputs.validEmail;\n\n  if (value) {\n    return validEmail.test(value);\n  }\n};\n\nvar passwordValidation = function passwordValidation(_ref2) {\n  var value = _ref2.value,\n      name = _ref2.name;\n  var validPassword = validInputs.validPassword;\n\n  if (value) {\n    return validPassword.test(value) ? \"\" : /*#__PURE__*/React.createElement(ErrorHandler, {\n      name: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 45\n      }\n    });\n  }\n};\n\nvar passwordConfirmation = function passwordConfirmation(_ref3) {\n  var password = _ref3.password,\n      confirmation = _ref3.confirmation,\n      name = _ref3.name;\n\n  if (password && confirmation) {\n    return password !== confirmation ? /*#__PURE__*/React.createElement(ErrorHandler, {\n      name: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 40\n      }\n    }) : null;\n  }\n};\n\nexport { initialsValidation, emailValidation, passwordValidation, passwordConfirmation }; // const InitialsValidation = ({ value, name }) => {\n//   const { validInitials } = validInputs;\n//   if (value) {\n//     return validInitials.test(value);\n//   }\n// };\n// const EmailValidation = ({ value, name }) => {\n//   const { validEmail } = validInputs;\n//   if (value) {\n//     return validEmail.test(value);\n//   }\n// };\n// const PasswordValidation = ({ value, name }) => {\n//   const { validPassword } = validInputs;\n//   if (value) {\n//     return validPassword.test(value) ? \"\" : <ErrorHandler name={name} />;\n//   }\n//   return value;\n// };\n// const PasswordConfirmation = ({ password, confirmation, name }) => {\n//   if (password && confirmation) {\n//     return password !== confirmation ? <ErrorHandler name={name} /> : null;\n//   }\n//   return confirmation;\n// };","map":{"version":3,"sources":["/Users/marinabudz97/Desktop/jsp camp/sign-up-app/sign-up-app/src/components/validation/validation.js"],"names":["React","ErrorHandler","validInputs","validInitials","RegExp","validEmail","validPassword","initialsValidation","value","test","emailValidation","name","passwordValidation","passwordConfirmation","password","confirmation"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,aAAa,EAAEC,MAAM,CAAC,kBAAD,CADH;AAElBC,EAAAA,UAAU,EAAED,MAAM,CAChB,wHADgB,CAFA;AAKlBE,EAAAA,aAAa,EAAEF,MAAM,CACnB,gEADmB;AALH,CAApB;;AAUA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;AAAA,MAC1BL,aAD0B,GACRD,WADQ,CAC1BC,aAD0B;;AAElC,MAAIK,KAAJ,EAAW;AACT,WAAOL,aAAa,CAACM,IAAd,CAAmBD,KAAnB,CAAP;AACD;AACF,CALD;;AAMA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,OAAqB;AAAA,MAAlBF,KAAkB,QAAlBA,KAAkB;AAAA,MAAXG,IAAW,QAAXA,IAAW;AAAA,MACnCN,UADmC,GACpBH,WADoB,CACnCG,UADmC;;AAE3C,MAAIG,KAAJ,EAAW;AACT,WAAOH,UAAU,CAACI,IAAX,CAAgBD,KAAhB,CAAP;AACD;AACF,CALD;;AAOA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,QAAqB;AAAA,MAAlBJ,KAAkB,SAAlBA,KAAkB;AAAA,MAAXG,IAAW,SAAXA,IAAW;AAAA,MACtCL,aADsC,GACpBJ,WADoB,CACtCI,aADsC;;AAE9C,MAAIE,KAAJ,EAAW;AACT,WAAOF,aAAa,CAACG,IAAd,CAAmBD,KAAnB,IAA4B,EAA5B,gBAAiC,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxC;AACD;AACF,CALD;;AAMA,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,QAAsC;AAAA,MAAnCC,QAAmC,SAAnCA,QAAmC;AAAA,MAAzBC,YAAyB,SAAzBA,YAAyB;AAAA,MAAXJ,IAAW,SAAXA,IAAW;;AACjE,MAAIG,QAAQ,IAAIC,YAAhB,EAA8B;AAC5B,WAAOD,QAAQ,KAAKC,YAAb,gBAA4B,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEJ,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,GAA2D,IAAlE;AACD;AACF,CAJD;;AAMA,SACEJ,kBADF,EAEEG,eAFF,EAGEE,kBAHF,EAIEC,oBAJF,G,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { ErrorHandler } from \"../error/error\";\n\nconst validInputs = {\n  validInitials: RegExp(/^[a-zA-Z]{3,100}/),\n  validEmail: RegExp(\n    /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n  ),\n  validPassword: RegExp(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\n  )\n};\n\nconst initialsValidation = value => {\n  const { validInitials } = validInputs;\n  if (value) {\n    return validInitials.test(value);\n  }\n};\nconst emailValidation = ({ value, name }) => {\n  const { validEmail } = validInputs;\n  if (value) {\n    return validEmail.test(value);\n  }\n};\n\nconst passwordValidation = ({ value, name }) => {\n  const { validPassword } = validInputs;\n  if (value) {\n    return validPassword.test(value) ? \"\" : <ErrorHandler name={name} />;\n  }\n};\nconst passwordConfirmation = ({ password, confirmation, name }) => {\n  if (password && confirmation) {\n    return password !== confirmation ? <ErrorHandler name={name} /> : null;\n  }\n};\n\nexport {\n  initialsValidation,\n  emailValidation,\n  passwordValidation,\n  passwordConfirmation\n};\n\n// const InitialsValidation = ({ value, name }) => {\n//   const { validInitials } = validInputs;\n//   if (value) {\n//     return validInitials.test(value);\n//   }\n// };\n\n// const EmailValidation = ({ value, name }) => {\n//   const { validEmail } = validInputs;\n//   if (value) {\n//     return validEmail.test(value);\n//   }\n// };\n\n// const PasswordValidation = ({ value, name }) => {\n//   const { validPassword } = validInputs;\n//   if (value) {\n//     return validPassword.test(value) ? \"\" : <ErrorHandler name={name} />;\n//   }\n//   return value;\n// };\n// const PasswordConfirmation = ({ password, confirmation, name }) => {\n//   if (password && confirmation) {\n//     return password !== confirmation ? <ErrorHandler name={name} /> : null;\n//   }\n//   return confirmation;\n// };\n"]},"metadata":{},"sourceType":"module"}